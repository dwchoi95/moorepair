{
  "problem": {
    "id": 105231,
    "difficulty": 3,
    "index": "C",
    "title": "Liar",
    "timeLimit": 1,
    "memLimit": 1024,
    "description": "### Description\n\nThere are $n$ players in a game. Each player is allocated an integer number, which may differ between players, and the total sum of these numbers is $s$.\n\nThe $i-th$ player claims that the number allocated to him is $a_i$, though this claim may not be true. How many of them could be telling the truth at most?\n\n\n### Input\n\nThe first line contains two integers $n$, $s$ $(1\u2264n\u226410^5, \u221210^9\u2264s\u226410^9)$.\n\nThe second line contains $n$ integers $a_1,a_2,\u2026,a_n (\u221210^4\u2264a_i\u226410^4)$, representing the numbers that the players claim to have been allocated.\n\n\n### Output\n\nOutput a single integer representing the maximum number of players who could be telling the truth.\n\n\n### Examples\n\ninput  \n3 3  \n1 2 3\n\noutput  \n2\n\n\ninput  \n4 -2  \n3 -10 2 3\n\noutput  \n4\n\n\n### Note\n\nIn the first example, if the numbers allocated to the players are 1,2,0, then the first player and the second player are telling the truth. It can be shown that under no circumstances could more than 2 players be telling the truth.\n\nIn the second example, if the numbers allocated to the players are 3,\u221210,2,3, then all the players are telling the truth. It can be shown that under no circumstances could more than 4 players be telling the truth."
  },
  "submissions": {
    "336457734": {
      "id": 336457734,
      "creationTimeSeconds": 1756703471,
      "relativeTimeSeconds": 2147483647,
      "programmingLanguage": "Python 3",
      "verdict": "OK",
      "testset": "TESTS",
      "passedTestCount": 8,
      "timeConsumedMillis": 93,
      "memoryConsumedBytes": 12288000,
      "code": "import sys\n\ndef main():\n    data = sys.stdin.read().strip().split()\n    if not data:\n        return\n    it = iter(data)\n    n = int(next(it))\n    s = int(next(it))\n    a = [int(next(it)) for _ in range(n)]\n    print(n if sum(a) == s else n - 1)\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    "320023025": {
      "id": 320023025,
      "creationTimeSeconds": 1747480342,
      "relativeTimeSeconds": 2147483647,
      "programmingLanguage": "Python 3",
      "verdict": "WRONG_ANSWER",
      "testset": "TESTS",
      "passedTestCount": 1,
      "timeConsumedMillis": 46,
      "memoryConsumedBytes": 204800,
      "code": "n, s = map(int, input().split())\na = list(map(int, input().split()))\n\n# \u7b5b\u9009\u975e\u8d1f\u62a5\u544a\u5e76\u6392\u5e8f\nnon_neg = [x for x in a if x >= 0]\nnon_neg.sort()\n\n# \u8ba1\u7b97\u524d\u7f00\u548c\u6570\u7ec4\nprefix = [0] * (len(non_neg) + 1)\nfor i in range(len(non_neg)):\n    prefix[i+1] = prefix[i] + non_neg[i]\n\n# \u4ece\u6700\u5927\u53ef\u80fd\u7684\u73a9\u5bb6\u6570\u5f00\u59cb\u68c0\u67e5\nmax_truthful = 0\nfor k in range(len(non_neg), -1, -1):\n    if prefix[k] <= s:\n        max_truthful = k\n        break\n\nprint(max_truthful)\n"
    },
    "319727454": {
      "id": 319727454,
      "creationTimeSeconds": 1747291637,
      "relativeTimeSeconds": 2147483647,
      "programmingLanguage": "Python 3",
      "verdict": "WRONG_ANSWER",
      "testset": "TESTS",
      "passedTestCount": 2,
      "timeConsumedMillis": 140,
      "memoryConsumedBytes": 8806400,
      "code": "rs, zh = map(int, input().split())\nstring1 = input().split()\nstring2 = string1[::-1]\nlst1 = string1\nlst2 = string2\nresult1 = 0\ncs1 = 0\ncs2 = 0\nsum1 = 0\nsum2 = 0\nfor i in lst1:\n    i = int(i)\n    sum1 += i\n    cs1 += 1\n    if sum1 == zh:\n        result1 = cs1\nresult2 = 0\nfor j in lst2:\n    j = int(j)\n    sum2 += j\n    cs2 += 1\n    if sum2 == zh:\n        result2 = cs2\nif result1 >= result2:\n    a = result1\nelse:\n    a = result2\nprint(a)"
    },
    "319721073": {
      "id": 319721073,
      "creationTimeSeconds": 1747288026,
      "relativeTimeSeconds": 2147483647,
      "programmingLanguage": "Python 3",
      "verdict": "WRONG_ANSWER",
      "testset": "TESTS",
      "passedTestCount": 2,
      "timeConsumedMillis": 140,
      "memoryConsumedBytes": 8601600,
      "code": "rs, zh = map(int, input().split())\nstring1 = input().split()\nstring2 = string1[::-1]\nlst1 = string1\nlst2 = string2\nresult1 = 0\ncs1 = 0\ncs2 = 0\nsum1 = 0\nsum2 = 0\nfor i in lst1:\n    i = int(i)\n    sum1 += i\n    cs1 += 1\n    if sum1 == zh:\n        result1 = cs1\n        break\nresult2 = 0\nfor j in lst2:\n    j = int(j)\n    sum2 += j\n    cs2 += 1\n    if sum2 == zh:\n        result2 = cs2\n        break\nif result1 >= result2:\n    a = result1\nelse:\n    a = result2\nprint(a)"
    },
    "318616388": {
      "id": 318616388,
      "creationTimeSeconds": 1746531948,
      "relativeTimeSeconds": 1548,
      "programmingLanguage": "Python 3",
      "verdict": "OK",
      "testset": "TESTS",
      "passedTestCount": 8,
      "timeConsumedMillis": 93,
      "memoryConsumedBytes": 11571200,
      "code": "n, s = map(int, input().split())\na = list(map(int, input().split()))\ntotal = sum(a)\nif total == s:\n    print(n)\nelse:\n    print(n - 1)"
    },
    "318615466": {
      "id": 318615466,
      "creationTimeSeconds": 1746531469,
      "relativeTimeSeconds": 1069,
      "programmingLanguage": "Python 3",
      "verdict": "WRONG_ANSWER",
      "testset": "TESTS",
      "passedTestCount": 2,
      "timeConsumedMillis": 125,
      "memoryConsumedBytes": 11161600,
      "code": "n, s = map(int, input().split())\narr = list(map(int, input().split()))\narr.sort()\ntotal = 0\nfor i in range(n):\n    total += arr[i]\n    if total == s:\n        print(i+1)\n        break"
    },
    "316211805": {
      "id": 316211805,
      "creationTimeSeconds": 1745060512,
      "relativeTimeSeconds": 2147483647,
      "programmingLanguage": "Python 3",
      "verdict": "TIME_LIMIT_EXCEEDED",
      "testset": "TESTS",
      "passedTestCount": 2,
      "timeConsumedMillis": 1000,
      "memoryConsumedBytes": 10854400,
      "code": "import itertools\nn, s = map(int, input().split())\na = list(map(int, input().split()))\nc = sum(a) - s\nresult = 0\nfor i in range(1, n + 1):\n    combos = itertools.combinations(a, i)\n    for combo in combos:\n        if sum(combo) == c:\n            result = i\n            break\n    if result:\n        break\nprint(n - result)"
    },
    "316207389": {
      "id": 316207389,
      "creationTimeSeconds": 1745058148,
      "relativeTimeSeconds": 2147483647,
      "programmingLanguage": "Python 3",
      "verdict": "TIME_LIMIT_EXCEEDED",
      "testset": "TESTS",
      "passedTestCount": 2,
      "timeConsumedMillis": 1000,
      "memoryConsumedBytes": 1030656000,
      "code": "import itertools\nn,s=map(int,input().split())\na=list(map(int,input().split()))\nb=[]\nfor i in range(1,n+1):\n    b.append(list(itertools.combinations(a,i)))\nc=sum(a)-s\nd=0\nfor i in range(1,n+1):\n    for j in b[i]:\n        if sum(j)==c:\n            d=i\n            break\n    break\nprint(n-d)"
    },
    "314213592": {
      "id": 314213592,
      "creationTimeSeconds": 1743926021,
      "relativeTimeSeconds": 2147483647,
      "programmingLanguage": "Python 3",
      "verdict": "OK",
      "testset": "TESTS",
      "passedTestCount": 8,
      "timeConsumedMillis": 93,
      "memoryConsumedBytes": 11366400,
      "code": "n,s = map(int,input().split())\nk=list(map(int,input().split()))\nsum = sum(k)\nif sum==s:\n    print(n)\nelse:\n    print(n-1)"
    },
    "313244111": {
      "id": 313244111,
      "creationTimeSeconds": 1743425235,
      "relativeTimeSeconds": 4335,
      "programmingLanguage": "Python 3",
      "verdict": "RUNTIME_ERROR",
      "testset": "TESTS",
      "passedTestCount": 0,
      "timeConsumedMillis": 46,
      "memoryConsumedBytes": 2150400,
      "code": "n, s = map(int,input().split())\na = list(map(int,input().split()))\na.sort(reverse = True)\nsum_num = 0\nfor num in a:\n    sum_num += num\n    if sum_num <= s:\n        count += 1\n    else:\n        break\nprint(count)"
    },
    "312021366": {
      "id": 312021366,
      "creationTimeSeconds": 1742715544,
      "relativeTimeSeconds": 2147483647,
      "programmingLanguage": "Python 3",
      "verdict": "OK",
      "testset": "TESTS",
      "passedTestCount": 8,
      "timeConsumedMillis": 93,
      "memoryConsumedBytes": 11878400,
      "code": "n,s=map(int,input().split())\nsum=0\nk=list(map(int,input().split()))\nfor i in range(n):\n    sum+=k[i]\n\nif sum==s:\n    print(n)\nelse:\n    print(n-1)\n\n"
    },
    "311650286": {
      "id": 311650286,
      "creationTimeSeconds": 1742558820,
      "relativeTimeSeconds": 2147483647,
      "programmingLanguage": "Python 3",
      "verdict": "OK",
      "testset": "TESTS",
      "passedTestCount": 8,
      "timeConsumedMillis": 93,
      "memoryConsumedBytes": 10137600,
      "code": "a=[0]\nd=0\nn,s=input('').split()\na[0:3]=input(\"\").split()\nfor i in range(int(n)):\n    d+=int(a[i])\nif d==int(s):\n    print(n)\nelse:\n    print(int(n)-1)"
    },
    "311650006": {
      "id": 311650006,
      "creationTimeSeconds": 1742558686,
      "relativeTimeSeconds": 2147483647,
      "programmingLanguage": "Python 3",
      "verdict": "WRONG_ANSWER",
      "testset": "TESTS",
      "passedTestCount": 1,
      "timeConsumedMillis": 61,
      "memoryConsumedBytes": 0,
      "code": "a=[0]\nd=0\nn,s=input('').split()\na[0:3]=input(\"\").split()\nfor i in range(int(n)):\n    d+=int(a[i])\nif d==s:\n    print(n)\nelse:\n    print(int(n)-1)"
    },
    "309159480": {
      "id": 309159480,
      "creationTimeSeconds": 1741239683,
      "relativeTimeSeconds": 2147483647,
      "programmingLanguage": "Python 3",
      "verdict": "WRONG_ANSWER",
      "testset": "TESTS",
      "passedTestCount": 2,
      "timeConsumedMillis": 93,
      "memoryConsumedBytes": 13004800,
      "code": "def max_honest_dragons(n, s, a):\n    total = sum(a)  # \u8ba1\u7b97\u6240\u6709\u6570\u5b57\u7684\u603b\u548c\n    if total == s:\n        return n  # \u5982\u679c\u603b\u548c\u5df2\u7ecf\u7b49\u4e8e s\uff0c\u6240\u6709\u5976\u9f99\u90fd\u8bda\u5b9e\n        a.sort()  # \u6392\u5e8f\n    for i in range(n):\n        if total - a[i] == s:\n            return n - 1  # \u53ea\u9700\u53bb\u6389 a[i]\uff0c\u5c31\u80fd\u6ee1\u8db3\n        return n  # \u4e0d\u80fd\u53bb\u6389\u4efb\u4f55\u5143\u7d20\uff0c\u5219\u6240\u6709\u9f99\u90fd\u53ef\u80fd\u662f\u771f\u5b9e\u7684\n # \u8bfb\u53d6\u8f93\u5165\nn, s = map(int, input().split())\na = list(map(int, input().split()))\n # \u8f93\u51fa\u7b54\u6848\nprint(max_honest_dragons(n, s, a))"
    },
    "308940318": {
      "id": 308940318,
      "creationTimeSeconds": 1741097109,
      "relativeTimeSeconds": 2147483647,
      "programmingLanguage": "Python 3",
      "verdict": "WRONG_ANSWER",
      "testset": "TESTS",
      "passedTestCount": 2,
      "timeConsumedMillis": 109,
      "memoryConsumedBytes": 12492800,
      "code": "def max_true_dragons(n, s, a):\n    # \u5148\u8ba1\u7b97\u6240\u6709\u5976\u9f99\u7684\u603b\u548c\n    total_sum = sum(a)\n        # \u5982\u679c\u603b\u548c\u5c31\u662f s\uff0c\u90a3\u5c31\u6240\u6709\u5976\u9f99\u90fd\u53ef\u4ee5\u8bf4\u771f\u8bdd\n    if total_sum == s:\n        return n\n        # \u6211\u4eec\u9700\u8981\u5c3d\u91cf\u9009\u53d6\u5976\u9f99\uff0c\u4f7f\u5f97\u5b83\u4eec\u7684\u548c\u63a5\u8fd1 s\n    # \u6392\u5e8f\u540e\u6211\u4eec\u53ef\u4ee5\u5c1d\u8bd5\u9009\u62e9\u8f83\u5c0f\u7684\u6570\u5b57\uff0c\u9010\u6b65\u903c\u8fd1 s\n    a.sort()\n        # \u5f53\u524d\u7684\u548c\n    current_sum = 0\n    count = 0\n        # \u9009\u53d6\u5976\u9f99\u5e76\u8ba1\u7b97\u5b83\u4eec\u7684\u548c\n    for i in range(n):\n        current_sum += a[i]\n        if current_sum == s:\n            count = i + 1\n            break\n        elif current_sum > s:\n            break\n        return count\n # \u8bfb\u53d6\u8f93\u5165\nn, s = map(int, input().split())\na = list(map(int, input().split()))\n # \u8f93\u51fa\u7ed3\u679c\nprint(max_true_dragons(n, s, a))"
    },
    "308919776": {
      "id": 308919776,
      "creationTimeSeconds": 1741088616,
      "relativeTimeSeconds": 2147483647,
      "programmingLanguage": "Python 3",
      "verdict": "OK",
      "testset": "TESTS",
      "passedTestCount": 8,
      "timeConsumedMillis": 78,
      "memoryConsumedBytes": 10240000,
      "code": "N,S = map(int, input().split())\n_sum = sum(map(int, input().split()))\nif _sum == S: print(N)\nelse: print(N-1)"
    },
    "308919460": {
      "id": 308919460,
      "creationTimeSeconds": 1741088469,
      "relativeTimeSeconds": 2147483647,
      "programmingLanguage": "Python 3",
      "verdict": "RUNTIME_ERROR",
      "testset": "TESTS",
      "passedTestCount": 0,
      "timeConsumedMillis": 30,
      "memoryConsumedBytes": 0,
      "code": "def main():\n    n, s = map(int, input().split()) \n    ans = n  \n    sum = 0\n\n\n    for _ in range(n):\n        x = int(input())\n        sum += x\n\n    if sum == s:\n        print(ans)  \n    else:\n        print(ans - 1)  \n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    "308441050": {
      "id": 308441050,
      "creationTimeSeconds": 1740803683,
      "relativeTimeSeconds": 2147483647,
      "programmingLanguage": "Python 3",
      "verdict": "WRONG_ANSWER",
      "testset": "TESTS",
      "passedTestCount": 2,
      "timeConsumedMillis": 108,
      "memoryConsumedBytes": 13004800,
      "code": "def max_true_dragons(n, s, a):\n    # \u5148\u8ba1\u7b97\u6240\u6709\u5976\u9f99\u7684\u603b\u548c\n    total_sum = sum(a)\n        # \u5982\u679c\u603b\u548c\u5c31\u662f s\uff0c\u90a3\u5c31\u6240\u6709\u5976\u9f99\u90fd\u53ef\u4ee5\u8bf4\u771f\u8bdd\n    if total_sum == s:\n        return n\n        # \u6211\u4eec\u9700\u8981\u5c3d\u91cf\u9009\u53d6\u5976\u9f99\uff0c\u4f7f\u5f97\u5b83\u4eec\u7684\u548c\u63a5\u8fd1 s\n    # \u6392\u5e8f\u540e\u6211\u4eec\u53ef\u4ee5\u5c1d\u8bd5\u9009\u62e9\u8f83\u5c0f\u7684\u6570\u5b57\uff0c\u9010\u6b65\u903c\u8fd1 s\n    a.sort()\n        # \u5f53\u524d\u7684\u548c\n    current_sum = 0\n    count = 0\n        # \u9009\u53d6\u5976\u9f99\u5e76\u8ba1\u7b97\u5b83\u4eec\u7684\u548c\n    for i in range(n):\n        current_sum += a[i]\n        if current_sum == s:\n            count = i + 1\n            break\n        elif current_sum > s:\n            break\n        return count\n # \u8bfb\u53d6\u8f93\u5165\nn, s = map(int, input().split())\na = list(map(int, input().split()))\n # \u8f93\u51fa\u7ed3\u679c\nprint(max_true_dragons(n, s, a))"
    },
    "308437939": {
      "id": 308437939,
      "creationTimeSeconds": 1740801248,
      "relativeTimeSeconds": 2147483647,
      "programmingLanguage": "Python 3",
      "verdict": "WRONG_ANSWER",
      "testset": "TESTS",
      "passedTestCount": 2,
      "timeConsumedMillis": 124,
      "memoryConsumedBytes": 12492800,
      "code": "def max_honest_dragons(n, s, a):\n    a.sort()  # \u5148\u6392\u5e8f\uff0c\u8d2a\u5fc3\u7b56\u7565\n    total = 0\n    count = 0\n\n    for i in range(n):\n        if total + a[i] <= s:  # \u7ee7\u7eed\u7d2f\u52a0\uff0c\u4fdd\u8bc1\u4e0d\u8d85\u8fc7 s\n            total += a[i]\n            count += 1\n        else:\n            break  # \u4e00\u65e6\u8d85\u8fc7 s\uff0c\u4e0d\u80fd\u518d\u52a0\u4e86\n\n    return count\n\n# \u8bfb\u53d6\u8f93\u5165\nn, s = map(int, input().split())\na = list(map(int, input().split()))\n\n# \u8f93\u51fa\u7b54\u6848\nprint(max_honest_dragons(n, s, a))\n"
    },
    "308430741": {
      "id": 308430741,
      "creationTimeSeconds": 1740795819,
      "relativeTimeSeconds": 2147483647,
      "programmingLanguage": "Python 3",
      "verdict": "WRONG_ANSWER",
      "testset": "TESTS",
      "passedTestCount": 2,
      "timeConsumedMillis": 108,
      "memoryConsumedBytes": 13004800,
      "code": "def max_truthful_dragons(n, s, a):\n    # \u5bf9\u5976\u9f99\u7684\u58f0\u660e\u8fdb\u884c\u6392\u5e8f\n    a.sort()\n\n    total = 0\n    max_truthful = 0\n\n    # \u904d\u5386\u6392\u5e8f\u540e\u7684\u58f0\u660e\n    for i in range(n):\n        # \u5982\u679c\u52a0\u4e0a\u5f53\u524d\u5976\u9f99\u7684\u58f0\u660e\u540e\u603b\u548c\u4ecd\u7136\u5c0f\u4e8e\u7b49\u4e8e s\n        if total + a[i] <= s:\n            total += a[i]\n            max_truthful += 1\n        else:\n            break\n\n    return max_truthful\n\n# \u8f93\u5165\u8bfb\u53d6\nn, s = map(int, input().split())\na = list(map(int, input().split()))\n\n# \u8ba1\u7b97\u6700\u5927\u8bf4\u771f\u8bdd\u7684\u5976\u9f99\u6570\u91cf\nresult = max_truthful_dragons(n, s, a)\n\n# \u8f93\u51fa\u7ed3\u679c\nprint(result)\n"
    },
    "308429757": {
      "id": 308429757,
      "creationTimeSeconds": 1740794922,
      "relativeTimeSeconds": 2147483647,
      "programmingLanguage": "Python 3",
      "verdict": "RUNTIME_ERROR",
      "testset": "TESTS",
      "passedTestCount": 0,
      "timeConsumedMillis": 77,
      "memoryConsumedBytes": 0,
      "code": "n=int(input())\ns=int(input())\na=[]\nfor i in range(n):\n    a.append(int(input()))\nsorted(a)\ni=0\nj=len(a)-1\nflag=True\nwhile(i<j):\n    if sum(a[i:j+1])==s:\n        print(j-i+1)\n        flag=False\n        break\n    elif sum(a[i:j+1])>s:\n        if sum(a[i:j])>s:\n            j-=1\n        elif sum(a[i+1:j+1])>s:\n            i+=1\n    elif sum(a[i:j+1])<s:\n        if sum(a[i:j+1])<s:\n            j+=1\n        elif sum(a[i-1:j+1])<s:\n            i-=1"
    },
    "308428738": {
      "id": 308428738,
      "creationTimeSeconds": 1740793817,
      "relativeTimeSeconds": 2147483647,
      "programmingLanguage": "Python 3",
      "verdict": "WRONG_ANSWER",
      "testset": "TESTS",
      "passedTestCount": 2,
      "timeConsumedMillis": 108,
      "memoryConsumedBytes": 13004800,
      "code": "def max_truthful_dragons(n, s, a):\n    # \u5bf9\u5976\u9f99\u7684\u58f0\u660e\u8fdb\u884c\u6392\u5e8f\n    a.sort()\n\n    total = 0\n    max_truthful = 0\n\n    # \u904d\u5386\u6392\u5e8f\u540e\u7684\u58f0\u660e\n    for i in range(n):\n        # \u5982\u679c\u52a0\u4e0a\u5f53\u524d\u5976\u9f99\u7684\u58f0\u660e\u540e\u603b\u548c\u4ecd\u7136\u5c0f\u4e8e\u7b49\u4e8e s\n        if total + a[i] <= s:\n            total += a[i]\n            max_truthful += 1\n        else:\n            break\n\n    return max_truthful\n\n# \u8f93\u5165\u8bfb\u53d6\nn, s = map(int, input().split())\na = list(map(int, input().split()))\n\n# \u8ba1\u7b97\u6700\u5927\u8bf4\u771f\u8bdd\u7684\u5976\u9f99\u6570\u91cf\nresult = max_truthful_dragons(n, s, a)\n\n# \u8f93\u51fa\u7ed3\u679c\nprint(result)\n"
    },
    "308428702": {
      "id": 308428702,
      "creationTimeSeconds": 1740793781,
      "relativeTimeSeconds": 2147483647,
      "programmingLanguage": "Python 3",
      "verdict": "WRONG_ANSWER",
      "testset": "TESTS",
      "passedTestCount": 2,
      "timeConsumedMillis": 124,
      "memoryConsumedBytes": 13004800,
      "code": "def max_truthful_dragons(n, s, a):\n    # \u5bf9\u5976\u9f99\u7684\u58f0\u660e\u8fdb\u884c\u6392\u5e8f\n    a.sort()\n\n    total = 0\n    max_truthful = 0\n\n    for i in range(n):\n        # \u5982\u679c\u52a0\u4e0a\u5f53\u524d\u5976\u9f99\u7684\u58f0\u660e\u540e\u603b\u548c\u4ecd\u7136\u5c0f\u4e8e\u7b49\u4e8e s\n        if total + a[i] <= s:\n            total += a[i]\n            max_truthful += 1\n        else:\n            break\n\n    return max_truthful\n\nn, s = map(int, input().split())\na = list(map(int, input().split()))\n\n# \u8ba1\u7b97\u6700\u5927\u8bf4\u771f\u8bdd\u7684\u5976\u9f99\u6570\u91cf\nresult = max_truthful_dragons(n, s, a)\n\nprint(result)\n"
    },
    "290689467": {
      "id": 290689467,
      "creationTimeSeconds": 1731154591,
      "relativeTimeSeconds": 5791,
      "programmingLanguage": "Python 3",
      "verdict": "OK",
      "testset": "TESTS",
      "passedTestCount": 8,
      "timeConsumedMillis": 93,
      "memoryConsumedBytes": 13209600,
      "code": "n, s = map(int, input().split())\nl = list(map(int, input().split()))\n\nif sum(l) == s:\n    print(n)\nelse:\n    print(n-1)\n"
    },
    "290688821": {
      "id": 290688821,
      "creationTimeSeconds": 1731154297,
      "relativeTimeSeconds": 5497,
      "programmingLanguage": "Python 3",
      "verdict": "WRONG_ANSWER",
      "testset": "TESTS",
      "passedTestCount": 2,
      "timeConsumedMillis": 124,
      "memoryConsumedBytes": 13107200,
      "code": "n, s = map(int, input().split())\nl = list(map(int, input().split()))\n\nl.sort()\ntotal = s\nmaxi = 0\nfor i in range(n):\n    if total-l[i]>0:\n        total -= l[i]\n        maxi+=1\n    elif total-l[i]==0:\n        maxi+=1\n        break\n    else:\n        break\nprint(maxi)\n"
    },
    "290688538": {
      "id": 290688538,
      "creationTimeSeconds": 1731154141,
      "relativeTimeSeconds": 5341,
      "programmingLanguage": "Python 3",
      "verdict": "WRONG_ANSWER",
      "testset": "TESTS",
      "passedTestCount": 2,
      "timeConsumedMillis": 140,
      "memoryConsumedBytes": 12492800,
      "code": "n, s = map(int, input().split())\nl = list(map(int, input().split()))\n\nif sum(l) == s:\n    print(n)\nelse:\n    l.sort()\n    total = s\n    maxi = 0\n    for i in range(n):\n        if total-l[i]>0:\n            total -= l[i]\n            maxi+=1\n        elif total-l[i]==0:\n            maxi+=1\n            break\n        else:\n            break\n\n\n    print(maxi)\n"
    },
    "290682686": {
      "id": 290682686,
      "creationTimeSeconds": 1731151319,
      "relativeTimeSeconds": 2519,
      "programmingLanguage": "Python 3",
      "verdict": "WRONG_ANSWER",
      "testset": "TESTS",
      "passedTestCount": 2,
      "timeConsumedMillis": 108,
      "memoryConsumedBytes": 13004800,
      "code": "n, s = map(int, input().split())\nl = list(map(int, input().split()))\n\nif sum(l) == s:\n    print(n)\nelse:\n    l.sort()\n    total = 0\n    maxi = 0\n    for i in range(n):\n        total += l[i]\n        if total <= s:\n            maxi += 1\n        else:\n            break\n    print(maxi)\n"
    },
    "290680876": {
      "id": 290680876,
      "creationTimeSeconds": 1731150484,
      "relativeTimeSeconds": 1684,
      "programmingLanguage": "Python 3",
      "verdict": "WRONG_ANSWER",
      "testset": "TESTS",
      "passedTestCount": 2,
      "timeConsumedMillis": 93,
      "memoryConsumedBytes": 12492800,
      "code": "n,s=map(int,input().split())\nl=list(map(int,input().split()))\nl.sort()\ntotal=0\nmaxi=0\nfor i in range(n):\n    total+=l[i]\n    if total<=s:\n        maxi+=1\n    else:\n        break\nprint(maxi)"
    },
    "284855626": {
      "id": 284855626,
      "creationTimeSeconds": 1728352222,
      "relativeTimeSeconds": 2147483647,
      "programmingLanguage": "Python 3",
      "verdict": "OK",
      "testset": "TESTS",
      "passedTestCount": 8,
      "timeConsumedMillis": 92,
      "memoryConsumedBytes": 13824000,
      "code": "def solve():\n    n,s = map(int, input().split())\n    a = list(map(int, input().split()))\n    if(sum(a) != s):\n        print(n-1)\n    else:\n        print(n)\n\n\nsolve()\n"
    },
    "284350974": {
      "id": 284350974,
      "creationTimeSeconds": 1728063486,
      "relativeTimeSeconds": 2147483647,
      "programmingLanguage": "Python 3",
      "verdict": "OK",
      "testset": "TESTS",
      "passedTestCount": 8,
      "timeConsumedMillis": 93,
      "memoryConsumedBytes": 10240000,
      "code": "N,S = map(int, input().split())\n_sum = sum(map(int, input().split()))\nif _sum == S: print(N)\nelse: print(N-1)"
    },
    "283271163": {
      "id": 283271163,
      "creationTimeSeconds": 1727461731,
      "relativeTimeSeconds": 2147483647,
      "programmingLanguage": "Python 3",
      "verdict": "WRONG_ANSWER",
      "testset": "TESTS",
      "passedTestCount": 2,
      "timeConsumedMillis": 93,
      "memoryConsumedBytes": 12390400,
      "code": "import math\n\nn, s = [int(i) for i in input().split()]\nans = 0\nnums = [int(i) for i in input().split()]\n\nacc = 0\nfor ni in nums:\n    acc += ni\n\ndiff = abs(acc-s)\n\n\nqtd = diff//(1e4)\nif diff > 0: qtd+=1\n\nprint(int(n-qtd))\n"
    },
    "283269904": {
      "id": 283269904,
      "creationTimeSeconds": 1727461085,
      "relativeTimeSeconds": 2147483647,
      "programmingLanguage": "Python 3",
      "verdict": "WRONG_ANSWER",
      "testset": "TESTS",
      "passedTestCount": 2,
      "timeConsumedMillis": 93,
      "memoryConsumedBytes": 12492800,
      "code": "import math\n\nn, s = [int(i) for i in input().split()]\nans = 0\nnums = [int(i) for i in input().split()]\n\nacc = 0\nfor ni in nums:\n    acc += ni\n\ndiff = abs(acc-s)\n\nqtd = math.ceil(diff/(1e4))\n\nprint(n-qtd)\n"
    },
    "280122795": {
      "id": 280122795,
      "creationTimeSeconds": 1725656355,
      "relativeTimeSeconds": 2147483647,
      "programmingLanguage": "Python 3",
      "verdict": "WRONG_ANSWER",
      "testset": "TESTS",
      "passedTestCount": 2,
      "timeConsumedMillis": 124,
      "memoryConsumedBytes": 13107200,
      "code": "n, s = map(int, input().split())\nclaimed_numbers = list(map(int, input().split()))\n\nclaimed_numbers.sort()\n\nclaimed_sum = 0\ntruthful_count = 0\n\nfor num in claimed_numbers:\n    claimed_sum += num\n    if claimed_sum <= s:\n        truthful_count += 1\n    else:\n        break\n\nprint(truthful_count)\n"
    },
    "280121287": {
      "id": 280121287,
      "creationTimeSeconds": 1725654861,
      "relativeTimeSeconds": 2147483647,
      "programmingLanguage": "Python 3",
      "verdict": "WRONG_ANSWER",
      "testset": "TESTS",
      "passedTestCount": 0,
      "timeConsumedMillis": 31,
      "memoryConsumedBytes": 0,
      "code": "n, s = map(int, input().split())\nclaims = list(map(int, input().split()))\n\nsorted_claims = sorted(claims, reverse=True)\n\ncurrent_sum = 0\ntruthful_count = 0\n\nfor claim in sorted_claims:\n    if current_sum + claim <= s:\n        current_sum += claim\n        truthful_count += 1\n    else:\n        break\n\nprint(truthful_count)\n"
    },
    "280121113": {
      "id": 280121113,
      "creationTimeSeconds": 1725654670,
      "relativeTimeSeconds": 2147483647,
      "programmingLanguage": "Python 3",
      "verdict": "WRONG_ANSWER",
      "testset": "TESTS",
      "passedTestCount": 2,
      "timeConsumedMillis": 108,
      "memoryConsumedBytes": 12492800,
      "code": "n, s = map(int, input().split())\nclaims = list(map(int, input().split()))\n\nclaims.sort()\n\ncurrent_sum = 0\nmax_truthful = 0\n\nfor i in range(n):\n    current_sum += claims[i]\n    if current_sum <= s:\n        max_truthful = i + 1\n    else:\n        break\n\nprint(max_truthful)\n"
    },
    "280120383": {
      "id": 280120383,
      "creationTimeSeconds": 1725653987,
      "relativeTimeSeconds": 2147483647,
      "programmingLanguage": "Python 3",
      "verdict": "WRONG_ANSWER",
      "testset": "TESTS",
      "passedTestCount": 2,
      "timeConsumedMillis": 108,
      "memoryConsumedBytes": 13004800,
      "code": "n, s = map(int, input().split())\nclaimed_numbers = list(map(int, input().split()))\n\nclaimed_numbers.sort()\n\nclaimed_sum = 0\ntruthful_count = 0\n\nfor i in range(n):\n    claimed_sum += claimed_numbers[i]\n    if claimed_sum <= s:\n        truthful_count += 1\n    else:\n        break\n\nprint(truthful_count)\n"
    },
    "273684325": {
      "id": 273684325,
      "creationTimeSeconds": 1722412428,
      "relativeTimeSeconds": 2147483647,
      "programmingLanguage": "Python 3",
      "verdict": "OK",
      "testset": "TESTS",
      "passedTestCount": 8,
      "timeConsumedMillis": 109,
      "memoryConsumedBytes": 10444800,
      "code": "def solve():\n    n, s = map(int, input().split())\n    total = sum(map(int, input().split()))\n\n    print((n - 1, n)[s == total])\n\n\nif __name__ == '__main__':\n    solve()\n\n"
    },
    "272720422": {
      "id": 272720422,
      "creationTimeSeconds": 1722003007,
      "relativeTimeSeconds": 2147483647,
      "programmingLanguage": "Python 3",
      "verdict": "OK",
      "testset": "TESTS",
      "passedTestCount": 8,
      "timeConsumedMillis": 108,
      "memoryConsumedBytes": 13312000,
      "code": "n, s = map(int, input().split())\na = list(map(int, input().split()))\nif sum(a)==s:\n    print(n)\nelse:\n    print(n-1)"
    },
    "272720170": {
      "id": 272720170,
      "creationTimeSeconds": 1722002871,
      "relativeTimeSeconds": 2147483647,
      "programmingLanguage": "Python 3",
      "verdict": "WRONG_ANSWER",
      "testset": "TESTS",
      "passedTestCount": 0,
      "timeConsumedMillis": 46,
      "memoryConsumedBytes": 0,
      "code": "def max_truthful_players(n, s, a):\n    total_sum = sum(a)\n    if total_sum == s:\n        return n\n\n    diffs = [abs(x - (total_sum - s) // n) for x in a]\n    diffs.sort()\n\n    current_sum = total_sum\n    count = n\n\n    for i in range(n):\n        if current_sum == s:\n            return count\n        current_sum -= diffs[i]\n        count -= 1\n\n    return count\n\n\ndef main():\n    # \u9010\u884c\u4ea4\u4e92\u5f0f\u8f93\u5165\n    n, s = map(int, input().split())\n    a = list(map(int, input().split()))\n\n    result = max_truthful_players(n, s, a)\n    print(result)\n\n\nif __name__ == \"__main__\":\n    main()\n"
    },
    "271395037": {
      "id": 271395037,
      "creationTimeSeconds": 1721399295,
      "relativeTimeSeconds": 1335,
      "programmingLanguage": "Python 3",
      "verdict": "OK",
      "testset": "TESTS",
      "passedTestCount": 8,
      "timeConsumedMillis": 93,
      "memoryConsumedBytes": 13312000,
      "code": "n,s = map(int,input().split())\narr = list(map(int,input().split()))\na = sum(arr)\nif a == s:\n    print(n)\nelse:\n    print(n - 1)"
    },
    "270978932": {
      "id": 270978932,
      "creationTimeSeconds": 1721200160,
      "relativeTimeSeconds": 6260,
      "programmingLanguage": "Python 3",
      "verdict": "OK",
      "testset": "TESTS",
      "passedTestCount": 8,
      "timeConsumedMillis": 93,
      "memoryConsumedBytes": 10444800,
      "code": "N, S = map(int, input().split())\nprint(N-(sum(map(int, input().split())) != S))"
    },
    "268688308": {
      "id": 268688308,
      "creationTimeSeconds": 1720048772,
      "relativeTimeSeconds": 2147483647,
      "programmingLanguage": "Python 3",
      "verdict": "RUNTIME_ERROR",
      "testset": "TESTS",
      "passedTestCount": 2,
      "timeConsumedMillis": 77,
      "memoryConsumedBytes": 13312000,
      "code": "arr_len, sum = map(int, input().split())\narr = list(map(int, input().split()))\n\nmax_truth_count = 0\n\ndef recur(idx, curr_sum, truth_count):\n    if idx >= arr_len:\n        return truth_count if curr_sum == sum else 0\n\n    curr_sum += arr[idx]\n    truth_count += 1\n    max_truth_count = truth_count if curr_sum == sum else 0\n\n    for i in range(idx + 1, arr_len):\n        max_truth_count = max(max_truth_count, recur(i, curr_sum, truth_count))\n\n    return max_truth_count\n\n\noverall_max_truth_count = 0\nfor i in range(arr_len):\n    overall_max_truth_count = max(overall_max_truth_count, recur(i, 0, 0))\n\nprint(overall_max_truth_count)\n"
    },
    "268687718": {
      "id": 268687718,
      "creationTimeSeconds": 1720047950,
      "relativeTimeSeconds": 2147483647,
      "programmingLanguage": "Python 3",
      "verdict": "RUNTIME_ERROR",
      "testset": "TESTS",
      "passedTestCount": 2,
      "timeConsumedMillis": 62,
      "memoryConsumedBytes": 13312000,
      "code": "arr_len, sum = map(int, input().split())\narr = list(map(int, input().split()))\n\nmax_truth_count = 0\n\ndef recur(idx, curr_sum, truth_count):\n    if idx > arr_len - 1:\n        return\n    curr_sum += arr[idx]\n    truth_count += 1\n    if curr_sum == sum:\n        global max_truth_count\n        max_truth_count = max(truth_count, max_truth_count)\n        return\n\n    for i in range(idx + 1, arr_len):\n        recur(i, curr_sum, truth_count)\n\n    return\n\nfor i in range(arr_len):\n    recur(i, 0, 0)\n# recur(0, 0, 0)\nprint(max_truth_count)\n\n"
    },
    "268687620": {
      "id": 268687620,
      "creationTimeSeconds": 1720047821,
      "relativeTimeSeconds": 2147483647,
      "programmingLanguage": "Python 3",
      "verdict": "RUNTIME_ERROR",
      "testset": "TESTS",
      "passedTestCount": 2,
      "timeConsumedMillis": 109,
      "memoryConsumedBytes": 12492800,
      "code": "arr_len, sum = map(int, input().split())\narr = list(map(int, input().split()))\n\nmax_truth_count = 0\n\ndef recur(idx, curr_sum, truth_count):\n    if idx > arr_len - 1:\n        return\n    curr_sum += arr[idx]\n    truth_count += 1\n    if curr_sum == sum:\n        global max_truth_count\n        max_truth_count = max(truth_count, max_truth_count)\n        return\n\n    for i in range(idx + 1, arr_len):\n        recur(i, curr_sum, truth_count)\n\n    return\n\n# for i in range(arr_len):\n#     recur(i, 0, 0)\nrecur(0, 0, 0)\nprint(max_truth_count)\n\n"
    },
    "267540325": {
      "id": 267540325,
      "creationTimeSeconds": 1719415244,
      "relativeTimeSeconds": 1244,
      "programmingLanguage": "Python 3",
      "verdict": "WRONG_ANSWER",
      "testset": "TESTS",
      "passedTestCount": 8,
      "timeConsumedMillis": 93,
      "memoryConsumedBytes": 12697600,
      "code": "n, s = input().split()\nn, s = int(n), int(s)\n\nnums = input().split()\nnums = [int(x) for x in nums]\n\nsums = sum(nums)\nif sums == s:\n    print(n)\n    exit()\nelse:\n    print(n - 1)\n    exit()\n\"\"\"\nelif sums < s:\n    nums.sort()\n    i = 0\n\n    while sums < s:\n        sums += 10**4 - nums[i]\n        i += 1\n\n    print(n - i)\n    exit()\nelse:\n    nums.sort(reverse=True)\n    i = 0\n\n    while sums > s:\n        sums -= 10**4 + nums[i]\n        i += 1\n\n    print(n - i)\n    exit()\n\n    \"\"\"\n"
    },
    "267540116": {
      "id": 267540116,
      "creationTimeSeconds": 1719415146,
      "relativeTimeSeconds": 1146,
      "programmingLanguage": "Python 3",
      "verdict": "WRONG_ANSWER",
      "testset": "TESTS",
      "passedTestCount": 2,
      "timeConsumedMillis": 124,
      "memoryConsumedBytes": 12697600,
      "code": "n, s = input().split()\nn, s = int(n), int(s)\n\nnums = input().split()\nnums = [int(x) for x in nums]\n\nsums = sum(nums)\nif sums == s:\n    print(n)\n    exit()\nelif sums < s:\n    nums.sort()\n    i = 0\n\n    while sums < s:\n        sums += 10**4 - nums[i]\n        i += 1\n\n    print(n - i)\n    exit()\nelse:\n    nums.sort(reverse=True)\n    i = 0\n\n    while sums > s:\n        sums -= 10**4 + nums[i]\n        i += 1\n\n    print(n - i)\n    exit()\n\n\n"
    },
    "266934837": {
      "id": 266934837,
      "creationTimeSeconds": 1719137306,
      "relativeTimeSeconds": 2147483647,
      "programmingLanguage": "Python 3",
      "verdict": "OK",
      "testset": "TESTS",
      "passedTestCount": 8,
      "timeConsumedMillis": 92,
      "memoryConsumedBytes": 10444800,
      "code": "def solve():\n    n, s = map(int, input().split())\n    total = sum(map(int, input().split()))\n\n    print((n - 1, n)[s == total])\n\n\nif __name__ == '__main__':\n    solve()\n\n"
    },
    "266880069": {
      "id": 266880069,
      "creationTimeSeconds": 1719089163,
      "relativeTimeSeconds": 363,
      "programmingLanguage": "Python 3",
      "verdict": "RUNTIME_ERROR",
      "testset": "TESTS",
      "passedTestCount": 0,
      "timeConsumedMillis": 61,
      "memoryConsumedBytes": 0,
      "code": "from collections import deque\n\ndef max_leeks(n, p, v, k, t0):\n    max_sum = deque([sum(v[:p]) + v[p]])\n    for t in range(1, t0+1):\n        max_sum.append(max(max_sum[-1] + k, max_sum[-2] + v[(p+1)%n]))\n        max_sum.popleft()\n    return max_sum[-1]\n\nT = int(input())\nfor _ in range(T):\n    n, p = map(int, input().split())\n    v = list(map(int, input().split())) \n    k, t0 = map(int, input().split())\n    print(max_leeks(n, p, v, k, t0))\n"
    },
    "266847500": {
      "id": 266847500,
      "creationTimeSeconds": 1719070425,
      "relativeTimeSeconds": 525,
      "programmingLanguage": "Python 3",
      "verdict": "WRONG_ANSWER",
      "testset": "TESTS",
      "passedTestCount": 0,
      "timeConsumedMillis": 46,
      "memoryConsumedBytes": 0,
      "code": "def max_players_telling_truth(n, s, claimed_numbers):\n    total_sum = sum(claimed_numbers)\n    max_count = 0\n\n    for claim in claimed_numbers:\n        other_sum = total_sum - claim\n        max_possible_sum = other_sum + 1\n\n        if max_possible_sum >= claim and max_possible_sum <= s:\n            max_count += 1\n\n    return max_count\n\n# Read input\nn, s = map(int, input().split())\nclaimed_numbers = list(map(int, input().split()))\n\n# Calculate and output the maximum number of players telling the truth\nresult = max_players_telling_truth(n, s, claimed_numbers)\nprint(result)\n"
    },
    "266570171": {
      "id": 266570171,
      "creationTimeSeconds": 1718884277,
      "relativeTimeSeconds": 977,
      "programmingLanguage": "Python 3",
      "verdict": "WRONG_ANSWER",
      "testset": "TESTS",
      "passedTestCount": 0,
      "timeConsumedMillis": 61,
      "memoryConsumedBytes": 0,
      "code": "def max_truthful_players(n, s, claims):\n    sum_claimed = sum(claims)\n    diff = sum_claimed - s\n        # Maximum number of players who could be telling the truth\n    max_truthful = n - abs(diff)\n        # Ensure max_truthful is not negative\n    return max(0, max_truthful)\n # Input reading\nn, s = map(int, input().split())\nclaims = list(map(int, input().split()))\n # Calculate and print the result\nprint(max_truthful_players(n, s, claims))"
    },
    "266569268": {
      "id": 266569268,
      "creationTimeSeconds": 1718883898,
      "relativeTimeSeconds": 598,
      "programmingLanguage": "Python 3",
      "verdict": "WRONG_ANSWER",
      "testset": "TESTS",
      "passedTestCount": 2,
      "timeConsumedMillis": 93,
      "memoryConsumedBytes": 13312000,
      "code": "n, s = map(int, input().split())\nclaims = sorted(map(int, input().split()))\n\ncount = 0\nfor claim in claims:\n    if s >= claim:\n        s -= claim\n        count += 1\n    else:\n        break\n\nprint(count)\n"
    },
    "266569059": {
      "id": 266569059,
      "creationTimeSeconds": 1718883802,
      "relativeTimeSeconds": 502,
      "programmingLanguage": "Python 3",
      "verdict": "WRONG_ANSWER",
      "testset": "TESTS",
      "passedTestCount": 1,
      "timeConsumedMillis": 62,
      "memoryConsumedBytes": 0,
      "code": "n, s = map(int, input().split())\nclaims = list(map(int, input().split()))\n\ncount = 0\nfor claim in claims:\n    if claim <= s:\n        s -= claim\n        count += 1\n\nprint(count)\n"
    },
    "266544937": {
      "id": 266544937,
      "creationTimeSeconds": 1718872613,
      "relativeTimeSeconds": 413,
      "programmingLanguage": "Python 3",
      "verdict": "WRONG_ANSWER",
      "testset": "TESTS",
      "passedTestCount": 2,
      "timeConsumedMillis": 124,
      "memoryConsumedBytes": 12492800,
      "code": "n, s = map(int, input().split())\nnums = list(map(int, input().split()))\nnums.sort() \nans = 0 \ncur = 0 \nfor i in range(n):\n    cur += nums[i] \n    if cur <= s:\n        ans += 1\n    else:\n        break\nprint(ans)"
    },
    "268688522": {
      "id": 268688522,
      "creationTimeSeconds": 1720049100,
      "relativeTimeSeconds": 2147483647,
      "programmingLanguage": "Python 3",
      "verdict": "RUNTIME_ERROR",
      "testset": "TESTS",
      "passedTestCount": 2,
      "timeConsumedMillis": 93,
      "memoryConsumedBytes": 13312000,
      "code": "arr_len, sum = map(int, input().split())\narr = list(map(int, input().split()))\narr_len = len(arr)\n\n\ndef recur(idx, curr_sum, truth_count):\n    if idx >= arr_len:\n        return truth_count if curr_sum == sum else 0\n\n    curr_sum += arr[idx]\n    truth_count += 1\n    max_truth_count = truth_count if curr_sum == sum else 0\n\n    for i in range(idx + 1, arr_len):\n        max_truth_count = max(max_truth_count, recur(i, curr_sum, truth_count))\n\n    return max_truth_count\n\n\noverall_max_truth_count = 0\nfor i in range(arr_len):\n    overall_max_truth_count = max(overall_max_truth_count, recur(i, 0, 0))\n\nprint(overall_max_truth_count)\n"
    }
  },
  "testcases": [
    {
      "no": 1,
      "input": "3 3\n1 2 3",
      "expect": "2",
      "hasStdIn": true
    },
    {
      "no": 2,
      "input": "4 -2\n3 -10 2 3",
      "expect": "4",
      "hasStdIn": true
    },
    {
      "no": 3,
      "input": "2 5\n3 1",
      "expect": "1",
      "hasStdIn": true
    },
    {
      "no": 4,
      "input": "5 0\n1 -2 3 -4 5",
      "expect": "4",
      "hasStdIn": true
    },
    {
      "no": 5,
      "input": "4 7\n7 0 0 -1",
      "expect": "3",
      "hasStdIn": true
    },
    {
      "no": 6,
      "input": "6 -3\n-1 -1 -1 2 0 1",
      "expect": "5",
      "hasStdIn": true
    },
    {
      "no": 7,
      "input": "3 -1000000000\n10000 -10000 0",
      "expect": "2",
      "hasStdIn": true
    },
    {
      "no": 8,
      "input": "5 1000000000\n10000 10000 10000 10000 10000",
      "expect": "4",
      "hasStdIn": true
    },
    {
      "no": 9,
      "input": "5 -5\n-2 -2 -1 5 0",
      "expect": "4",
      "hasStdIn": true
    },
    {
      "no": 10,
      "input": "4 10\n4 3 2 1",
      "expect": "4",
      "hasStdIn": true
    }
  ]
}